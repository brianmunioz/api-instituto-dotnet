// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20241128040102_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4");

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d46a85d-daa0-4b96-ab83-e12ee9387978"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2181),
                            Titulo = "Handmade Rubber Mouse"
                        },
                        new
                        {
                            Id = new Guid("52712dfa-d399-4fcf-a21b-00cd9e2c80dd"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2312),
                            Titulo = "Handmade Plastic Shoes"
                        },
                        new
                        {
                            Id = new Guid("ceba950d-ae05-4c3f-9708-3636c3119b13"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2352),
                            Titulo = "Sleek Plastic Chicken"
                        },
                        new
                        {
                            Id = new Guid("ef1ffaa8-bf70-40ca-a42e-eacae96bad84"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2383),
                            Titulo = "Sleek Granite Shoes"
                        },
                        new
                        {
                            Id = new Guid("50d9b3fe-8472-4960-b15c-aa54e3f6ebe3"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2418),
                            Titulo = "Tasty Cotton Towels"
                        },
                        new
                        {
                            Id = new Guid("c40d304e-74eb-446f-9955-b64732b3f279"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2453),
                            Titulo = "Awesome Metal Mouse"
                        },
                        new
                        {
                            Id = new Guid("d4df2955-3374-4c5d-bb3c-a9a0db72df98"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2484),
                            Titulo = "Unbranded Fresh Bike"
                        },
                        new
                        {
                            Id = new Guid("1ddc2737-4639-4919-af32-925042759147"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2579),
                            Titulo = "Handmade Wooden Shirt"
                        },
                        new
                        {
                            Id = new Guid("93b6c5ac-de2e-4590-a6a3-962c85184bac"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 11, 28, 4, 1, 1, 530, DateTimeKind.Utc).AddTicks(2612),
                            Titulo = "Generic Soft Pants"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bb879f-418b-4487-8aab-db310de339fa"),
                            Apellidos = "Crist",
                            Grado = "Principal Branding Assistant",
                            Nombre = "Yadira"
                        },
                        new
                        {
                            Id = new Guid("c15edab1-e03d-4bed-9173-a0bfee362e5e"),
                            Apellidos = "Schroeder",
                            Grado = "Investor Communications Agent",
                            Nombre = "Jan"
                        },
                        new
                        {
                            Id = new Guid("51913e73-fad8-454f-9a67-2682337cd9bf"),
                            Apellidos = "Frami",
                            Grado = "Product Creative Technician",
                            Nombre = "Cesar"
                        },
                        new
                        {
                            Id = new Guid("02a7fee8-dd7d-4886-b4e5-d34715dd606d"),
                            Apellidos = "Larkin",
                            Grado = "Dynamic Program Technician",
                            Nombre = "Morgan"
                        },
                        new
                        {
                            Id = new Guid("731f4f91-04cf-45cc-986b-c1e00b9f8704"),
                            Apellidos = "Feeney",
                            Grado = "Direct Metrics Liaison",
                            Nombre = "Eliezer"
                        },
                        new
                        {
                            Id = new Guid("004a10b9-d65d-457f-965c-3242e26a7541"),
                            Apellidos = "Crooks",
                            Grado = "Forward Group Analyst",
                            Nombre = "Katarina"
                        },
                        new
                        {
                            Id = new Guid("204b0c6c-35f4-437f-b6d7-cb60bc19efe9"),
                            Apellidos = "Halvorson",
                            Grado = "Regional Interactions Analyst",
                            Nombre = "Anais"
                        },
                        new
                        {
                            Id = new Guid("fc918021-cba4-47bc-b5e7-fc62bdbfa784"),
                            Apellidos = "Gottlieb",
                            Grado = "District Functionality Assistant",
                            Nombre = "Bill"
                        },
                        new
                        {
                            Id = new Guid("b658b37b-899c-4b6c-b82b-bb4bc5f7115a"),
                            Apellidos = "Mosciski",
                            Grado = "Senior Mobility Manager",
                            Nombre = "Florine"
                        },
                        new
                        {
                            Id = new Guid("2b7ba4d7-6e70-437e-9448-beb24c0cf26f"),
                            Apellidos = "Kuhlman",
                            Grado = "Investor Assurance Assistant",
                            Nombre = "Angelo"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a88d250-5990-4c0b-af30-93ce0d9ab96a"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
