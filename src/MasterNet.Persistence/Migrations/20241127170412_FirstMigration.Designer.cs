// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20241127170412_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4");

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b1ed9e7-4f5f-440f-b59c-563fb054d2e5"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(4791),
                            Titulo = "Incredible Cotton Chair"
                        },
                        new
                        {
                            Id = new Guid("94954648-b211-47db-8554-88e91f8811a6"),
                            Descripcion = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(4843),
                            Titulo = "Generic Concrete Chips"
                        },
                        new
                        {
                            Id = new Guid("4facf808-867e-471b-811b-2b6467c78a16"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(4904),
                            Titulo = "Awesome Cotton Bike"
                        },
                        new
                        {
                            Id = new Guid("05e98d6c-d11b-4fec-9dd5-06c8663a2643"),
                            Descripcion = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(4940),
                            Titulo = "Incredible Soft Towels"
                        },
                        new
                        {
                            Id = new Guid("fd300c79-3721-4f74-a7d8-cbf3f1940fad"),
                            Descripcion = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(4974),
                            Titulo = "Small Rubber Pants"
                        },
                        new
                        {
                            Id = new Guid("893111be-89eb-4fbb-9a4a-a1603dca9d6a"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(5016),
                            Titulo = "Intelligent Frozen Soap"
                        },
                        new
                        {
                            Id = new Guid("47fb144d-9ec7-4afe-95d3-e51c52e2eaf7"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(5046),
                            Titulo = "Unbranded Steel Chair"
                        },
                        new
                        {
                            Id = new Guid("ebf0570a-b352-49b6-a011-2a375c90139c"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(5077),
                            Titulo = "Unbranded Granite Fish"
                        },
                        new
                        {
                            Id = new Guid("9f7b9235-c73c-4bd0-91ab-86b84413aaff"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2024, 11, 27, 17, 4, 10, 277, DateTimeKind.Utc).AddTicks(5126),
                            Titulo = "Rustic Plastic Chicken"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5af9deb1-5914-471e-8f74-52c914ba76bb"),
                            Apellidos = "Kirlin",
                            Grado = "Regional Brand Agent",
                            Nombre = "Albin"
                        },
                        new
                        {
                            Id = new Guid("57e189a8-3505-4da0-a0ae-6e32395ec0b7"),
                            Apellidos = "King",
                            Grado = "Legacy Interactions Planner",
                            Nombre = "Freida"
                        },
                        new
                        {
                            Id = new Guid("42a3e746-2e98-41c6-94d1-b53ee86f07ac"),
                            Apellidos = "Kirlin",
                            Grado = "Investor Quality Producer",
                            Nombre = "Linwood"
                        },
                        new
                        {
                            Id = new Guid("2b76e08c-8983-469e-8014-5cbacbe90f87"),
                            Apellidos = "Waters",
                            Grado = "Forward Markets Designer",
                            Nombre = "Jaylan"
                        },
                        new
                        {
                            Id = new Guid("2404e5f9-508f-4a9a-97cf-ce744ed2f7c0"),
                            Apellidos = "Rice",
                            Grado = "Chief Infrastructure Director",
                            Nombre = "Ron"
                        },
                        new
                        {
                            Id = new Guid("a7e8e2f5-ce7d-4686-bd52-a22127bb95aa"),
                            Apellidos = "Williamson",
                            Grado = "Legacy Functionality Representative",
                            Nombre = "Danial"
                        },
                        new
                        {
                            Id = new Guid("178879a6-3062-4a04-814b-3d3e2e07dd24"),
                            Apellidos = "Waelchi",
                            Grado = "Corporate Paradigm Specialist",
                            Nombre = "Amie"
                        },
                        new
                        {
                            Id = new Guid("09036d66-39b2-4fa6-9da0-20c5b7ba9ccb"),
                            Apellidos = "Muller",
                            Grado = "Global Program Architect",
                            Nombre = "Kenya"
                        },
                        new
                        {
                            Id = new Guid("e45507f6-daef-41b0-90e8-94d0f745e56c"),
                            Apellidos = "Crist",
                            Grado = "Internal Interactions Analyst",
                            Nombre = "Kara"
                        },
                        new
                        {
                            Id = new Guid("2537ec57-c7b2-43c7-9914-1b940397f86e"),
                            Apellidos = "Brown",
                            Grado = "International Implementation Liaison",
                            Nombre = "Maurice"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6ddc217-67c0-488f-905f-7cdf87c3e6b8"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
